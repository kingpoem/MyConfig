# -- general -------------------------------------------------------------------

set -g default-terminal "screen-256color"

# setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on

set -g prefix2 C-a                        # GNU-Screen compatible prefix
set -g prefix C-a
unbind C-b
bind C-a send-prefix
# bind C-a send-prefix -2

# unbind '""'
# bind - splitw -v -c '#{pane_current_path}'# 垂直新增面板
# unbind %
# bind | splitw -h -c '#{pane_current_path}'# 水平新增面板
# setw -g mode-mouse on # 支持鼠标选取文本
# setw -g mouse-resize-pane on # 支持鼠标拖动调整面板的大小
# setw -g mouse-select-pane on # 支持鼠标选中并切换面板
# setw -g mouse-select-window on # 支持鼠标选中并切换窗口
# set-option -g mouse on # 等同于以上4个命令的效果
# set -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
# setw -q -g utf8 on
set -g mouse on
set-option -g set-clipboard on
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v  send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y  send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi y  send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"

set -g history-limit 15000                 # boost history


# edit configuration
# set-environment -g EDITOR "$EDITOR"
bind e new-window -n "#{TMUX_CONF_LOCAL}" sh -c 'case "${EDITOR:-vim}" in *vim*) ${EDITOR:-vim} -c ":set syntax=tmux" "$TMUX_CONF_LOCAL";; *) $EDITOR "$TMUX_CONF_LOCAL";; esac && "$TMUX_PROGRAM" ${TMUX_SOCKET:+-S "$TMUX_SOCKET"} source "$TMUX_CONF" \; display "$TMUX_CONF_LOCAL sourced"'

# reload configuration
bind r run '"$TMUX_PROGRAM" ${TMUX_SOCKET:+-S "$TMUX_SOCKET"} source "$TMUX_CONF"' \; display "#{TMUX_CONF} sourced"


# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
set -g renumber-windows on    # renumber windows when a window is closed
set -g set-titles on          # set terminal title
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time
set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off


# -- navigation ----------------------------------------------------------------

bind C-c new-session # create session
bind C-f command-prompt -p find-session 'switch-client -t %%' 

# session navigation
bind BTab switch-client -l  # move to last session

bind - split-window -v
bind _ split-window -h

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
# bind > swap-pane -D       # swap current pane with the next one
# bind < swap-pane -U       # swap current pane with the previous one

# maximize current pane
bind + run "cut -c3- '#{TMUX_CONF}' | sh -s _maximize_pane '#{session_name}' '#D'"

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
# unbind n
# unbind p
# bind -r C-h previous-window # select previous window
# bind -r C-l next-window     # select next window
# bind Tab last-window        # move to last active window

# toggle mouse
# bind m run "cut -c3- '#{TMUX_CONF}' | sh -s _toggle_mouse"


# -- facebook pathpicker -------------------------------------------------------

# bind F run "cut -c3- '#{TMUX_CONF}' | sh -s _fpp '#{pane_id}' '#{pane_current_path}'"


# -- copy mode -----------------------------------------------------------------

# bind Enter copy-mode # enter copy mode

# bind -T copy-mode-vi v send -X begin-selection
# bind -T copy-mode-vi C-v send -X rectangle-toggle
# bind -T copy-mode-vi y send -X copy-selection-and-cancel
# bind -T copy-mode-vi Escape send -X cancel
# bind -T copy-mode-vi H send -X start-of-line
# bind -T copy-mode-vi L send -X end-of-line

# -- buffers -------------------------------------------------------------------

# bind b list-buffers     # list paste buffers
# bind p paste-buffer -p  # paste from the top paste buffer
# bind P choose-buffer    # choose which buffer to paste from



# run '"$TMUX_PROGRAM" source "$TMUX_CONF_LOCAL"'
# run 'cut -c3- "$TMUX_CONF" | sh -s _apply_configuration'
#set -g status-bg black # 设置状态栏背景黑色
#set -g status-fg yellow # 设置状态栏前景黄色
#set -g status-style "bg=black, fg=yellow" # 状态栏前景背景色

set -g status-left "#[bg=#88cc44] Sess: #S " # 状态栏-左侧内容 (#S: 会话(session)名称)
#set -g status-right 'Continuum status: #{continuum_status}' # 状态栏右侧内容
set -g status-left-length 300 # 状态栏-左边长度300
set -g status-right-length 500 # 状态栏-左边长度500

set -wg window-status-format " #I:#W " # 状态栏-(当前窗口除外的其他)窗口名称格式
set -wg window-status-separator "" # 状态栏-窗口名称之间的间隔
set -wg window-status-current-format " #I:#W #F " # 状态栏-当前窗口名称格式(#I：序号，#w：窗口名称，#F：间隔符)
set -wg window-status-current-style "bg=black, fg=yellow" # 状态栏-当前窗口名称的背景色
#set -wg window-status-last-style "fg=black" # 状态栏最后一个窗口名称的样式"""")"""")""''))"]"""
set -g message-style "bg=#202529, fg=#91A8BA" # 指定消息通知的前景、后景色


########## 插件 ##########
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# tmux-resurrect 插件，用于手动保存和恢复 tmux 环境信息。
# 使用方式：按 PREFIX,Ctrl+s 保存 session，按 PREFIX,Ctrl+r 恢复 session
set -g @plugin 'tmux-plugins/tmux-resurrect'
# 使 tmux-resurrect 支持保存和恢复 tmux 中的 vim 会话:
set -g @resurrect-strategy-vim 'session'  # 需要 VIM 先安装 https://github.com/tpope/vim-obsession 插件

# tmux-continuum 插件。依赖: tmux>=1.9, bash, tmux-resurrect
# 每隔15分钟自动保存 tmux 环境信息(不需要任何配置，默认就有)
set -g @plugin 'tmux-plugins/tmux-continuum'
# 使得机器启动时，自动启动 tmux server:
set -g @continuum-boot 'on'  # This is only for Linux. For MacOSX, see: https://github.com/tmux-plugins/tmux-continuum/blob/master/docs/automatic_start.md
# tmux server 启动时，自动加载上次保存的环境信息
set -g @continuum-restore 'on'

set -g @plugin 'tmux-plugin/tpm'
set -g @plugin 'catppuccin/tmux#latest'
run '~/.tmux/plugin/tpm/tpm'
set-option -g status-position top
set -g @catppuccin_flavor 'mocha'
